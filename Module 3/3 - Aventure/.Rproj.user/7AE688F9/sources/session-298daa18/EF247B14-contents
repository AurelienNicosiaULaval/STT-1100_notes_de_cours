---
title: "Aventure 3 - Infractions dans les restaurants de Montr√©al"
subtitle: "STT-1100"
editor: visual
editor_options: 
  chunk_output_type: console
format:
  html:
    toc: true
    self-contained: true
    number-sections: true
    css: style.css
---

```{r setup, echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)
library(UlavalSSD)
```

# üçø Introduction : L'histoire

Une nouvelle vague d'inspections alimentaires a r√©cemment eu lieu au Qu√©bec Les autorit√©s souhaitent v√©rifier la salubrit√© et la conformit√© des restaurants. **Vous √™tes le ou la scientifique des donn√©es** charg√©¬∑e d‚Äôanalyser les donn√©es de condamnations pour en tirer des informations probantes‚ÄØ: 

- Quelle est la proportion des √©tablissements provenant de la ville de Montr√©al?

- Quelles sont les infractions les plus courantes‚ÄØ? 

- Quels types d‚Äô√©tablissements sont touch√©s‚ÄØ? 

- Quel montant d‚Äôamendes ont √©t√© impos√©es en moyenne‚ÄØ? Ce montant d√©pend t-il du type d'infractions?

:::note  
üí° **Note pour le rapport**  
Tout au long de l'analyse, vous devrez garder en t√™te ces questions et y r√©pondre de mani√®re argument√©e dans votre rapport `qmd`  
:::


Dans ce module, vous explorerez un **jeu de donn√©es** qui d√©crit diverses infractions, leurs amendes et le type d‚Äô√©tablissements concern√©s. Votre mission‚ÄØ: **analyser les donn√©es pour r√©pondre √† l‚Äôobjectif d‚Äôidentifier les infractions dans les restaurants √† Montr√©al**.

------------------------------------------------------------------------

# üöÄ Travail sur Github

Avant de commencer l'analyse des donn√©es, vous devez r√©cup√©rer le d√©p√¥t GitHub contenant les fichiers n√©cessaires.

1Ô∏è‚É£ Clonez le d√©p√¥t "Aventure3-IDENTIFIANT_GITHUB".

2Ô∏è‚É£ Cr√©ez un environnement de travail propre: Une fois le d√©p√¥t clon√©, ouvrez RStudio et assurez-vous que vous √™tes bien dans le dossier du projet.

üí° Astuce : Si vous souhaitez revenir plus tard sur ce projet, vous pouvez ouvrir directement le projet en double-cliquant sur le fichier `.Rproj` dans votre explorateur de fichiers.

3Ô∏è‚É£ Ajuster le fichier Quarto: Le rapport d'analyse est pr√©sent dans le d√©p√¥t. Allez inscrire votre nom.

Dans le rapport, les titres de sections sont pr√©sent pour vous. Vous trouverez aussi une section conclusion ou vous devrez r√©pondre aux questions pos√©es.

4Ô∏è‚É£ Premier commit et push vers GitHub: Une fois votre fichier `.qmd` ajust√© et enregistr√©, commitez et poussez vos modifications sur GitHub :

Attention: on se rappelle que les messages de commit doivent √™tre parlant. Par exemple "Ajout du fichier d'analyse initial"

üéØ F√©licitations ! Vous √™tes maintenant pr√™t √† d√©buter l‚Äôanalyse ! üöÄ

# üéØ Comment r√©ussir l'aventure

1.  **Cloner le projet** : Assurez-vous de r√©cup√©rer le d√©p√¥t GitHub (ou les fichiers) correspondant √† l‚Äôaventure.
2.  **Charger les donn√©es** : Vous pouvez soit :
    -   Charger le package `UlavalSSD` et appeler `data(listecondamnation)`.
3.  **Suivre les sections** : Chaque section contient des explications, une d√©monstration, des exp√©rimentations √† r√©aliser, puis des exercices.
4.  **Documenter vos trouvailles** : Comme dans les aventures pr√©c√©dentes, commentez votre code, expliquez vos choix et validez vos analyses.

------------------------------------------------------------------------

# üè∑Ô∏è Variables cat√©goriques : les bases en R avec `stringr`

## ‚ú® Explications

En R, une variable cat√©gorique est souvent repr√©sent√©e par : 

- Un **facteur** (`factor`) qui contient un ensemble de niveaux d√©finis.

- Ou un simple **character** pour les cha√Ænes de caract√®res.

**Dans le Tidyverse**, on manipule souvent des cha√Ænes de caract√®res via le package **stringr**‚ÄØ; pour la conversion en facteur, on peut utiliser `as.factor()` ou le package **forcats**.

Pour le module 3, nous nous concentrerons sur les variables cat√©gorique de type **character**. Dans le module 4, nous verrons plus en d√©tail les facteurs.

Voici des exemples d√©montrant comment utiliser `stringr` (partie du `Tidyverse`) pour manipuler des variables de type character dans un jeu de donn√©es comme `listecondamnation`. Les exemples ci‚Äëdessous ciblent des cas fr√©quents‚ÄØ: d√©tection de motifs, extraction, remplacement, et nettoyage de cha√Ænes.

## üöÄ D√©monstration

On va utiliser le jeu de donn√©es `listecondamnation`  de la librarie `UlavalSSD` qui contient les condamnations des √©tablissements alimentaires au Qu√©bec.


```{r}
library(UlavalSSD)
library(tidyverse)
glimpse(listecondamnation)
```

> **Remarque** : Lancer `glimpse()` sur vos donn√©es vous permettra de rep√©rer quelles colonnes sont en `chr` (character) et lesquelles sont en `factor` ou encore en `numeric`.

> **Remarque 2** : Trois colonnes sont au format date, pour l'instant, nous n'en tiendrons pas compte, nous reviendrons dans un module plus tard sur le format date.

üí° **Question de r√©flexion** : Quel est le type de la variable `Amende`? Est-ce que cela vous semble probl√©matique?

### D√©tection de motifs (`str_detect()`)

Pour v√©rifier si l‚Äôadresse mentionne `"MONTREAL"` (ou un code postal, etc.), on peut faire :

```{r}

# Cr√©er une colonne bool√©enne 'est_montreal'
listecondamnation <- listecondamnation %>%
  mutate(est_montreal = str_detect(Adresse_lieu_infraction, "MONTREAL"))

# Aper√ßu
listecondamnation %>%
  select(Adresse_lieu_infraction, est_montreal) %>%
  head(10)
```

Vous obtenez `TRUE/FALSE` selon la pr√©sence du mot **MONTREAL** dans la cha√Æne.

::: experimentation
**Exp√©rimentation**: Quelle est la proportion du nombre d'adresse contenant le mot **MONTREAL**?
:::

### Remplacement (`str_replace()` et `str_replace_all()`)

Pour nettoyer la colonne `Amende`, on peut enlever le symbole `$` ou remplacer des virgules par des points, etc.

```{r}

# str_replace() remplace la 1re occurrence ; str_replace_all() toutes les occurrences  
listecondamnation <- listecondamnation %>%   mutate( 
  # Exemple : retirer le $ si pr√©sent 
  Amende_clean = str_replace_all(Amende, "\\$", ""), 
  # remplacer √©ventuelles virgules par un point   
  Amende_clean = str_replace_all(Amende_clean, ",", ".")   )  

# V√©rifions 
listecondamnation %>%  
  select(Amende, Amende_clean) %>%  
  head(10)
```

Ici, les motifs sont des **expressions r√©guli√®res**.

-   `\\$` correspond litt√©ralement au signe `$`.

-   `,` est remplac√© par `.` (utile si votre texte comporte `\"1,000\"`).

### Extraction de motifs (`str_extract()`)

Pour extraire un √©l√©ment pr√©cis. Par exemple, si `Adresse_lieu_infraction` contient un code postal de la forme `H2X 3E4`, on peut tenter :

```{r}

listecondamnation <- listecondamnation %>%   
  mutate(     
    code_postal = str_extract(Adresse_lieu_infraction, "[A-Z][0-9][A-Z]\\s*[0-9][A-Z][0-9]")   )  

listecondamnation %>%  
  select(Adresse_lieu_infraction, code_postal) %>%
  head(10)
```

Le motif `[A-Z][0-9][A-Z]\\s*[0-9][A-Z][0-9]` est une forme simplifi√©e d‚Äôun code postal canadien.

### Mise en forme (`str_to_lower()`, `str_to_upper()`, etc.)

Parfois, il est utile d‚Äôharmoniser la casse (`MONTREAL`, `Montr√©al`, etc.) :

```{r}
listecondamnation <- listecondamnation %>%  
  mutate(     Adresse_lower = str_to_lower(Adresse_lieu_infraction),    
              # ou str_to_upper, str_to_title ...   
              # trim pour enlever espaces en trop    
              Adresse_trim = str_trim(Adresse_lieu_infraction)   )
```

### Suppression d‚Äôespaces multiples (`str_squish()`)

Si les donn√©es contiennent des espaces superflus :

``` {r}
listecondamnation <- listecondamnation %>%   
  mutate(     
    Adresse_squish = str_squish(Adresse_lieu_infraction)  
    )
```

`str_squish()` r√©duit tous les espaces r√©p√©t√©s √† un seul et supprime ceux en d√©but/fin de cha√Æne.


::: exercise
üìù **Exercice** :

1.  **Filtrer Montr√©al** : Cr√©ez un nouveau data frame `condamnation_mtl` ne contenant **que** les restaurants dont l‚Äôadresse indique "MONTREAL"  (casse insensible).

2.  **Recherche de mots-cl√©s** : D√©tectez un mot-cl√© (p. ex. ‚ÄúHYGI√àNE‚Äù) dans `SOC_NOM_ARTCL_INFRC`. Cr√©ez une variable bool√©enne `est_hygiene`.

3.  **Nettoyage complet de la variable `Amende`** : Cr√©er une variable `Amende_num` qui est de type `numeric` avec le montant de l'amende pay√© par le restaurant. Vous allez devoir utiliser le fonction `as.numeric`.
:::


Pensez √† g√©n√©rer votre rapport, committer vos modifications et pousser sur GitHub pour garder une trace de votre travail ! üöÄ

------------------------------------------------------------------------

# üèó Statistiques descriptives pour variables cat√©goriques

Dans cette section, nous allons d√©couvrir comment r√©sumer l‚Äôinformation contenue dans les variables qualitatives, appel√©es aussi cat√©gorielles. Nous verrons comment compter les occurrences de chaque cat√©gorie (tableaux de fr√©quences), calculer des proportions (ou pourcentages) afin de mieux visualiser la r√©partition, et associer plusieurs variables pour mieux comprendre leurs interactions (tableaux de contingence). L‚Äôobjectif est de disposer d‚Äôun portrait clair de la distribution des cat√©gories pour en tirer des conclusions rapides sur les tendances ou anomalies pr√©sentes dans les donn√©es.

## ‚ú® Explications

Les **tableaux de fr√©quences** et les **mesures de tendance** (nombre d‚Äôobservations, pourcentages) sont un bon point de d√©part pour r√©sumer des variables cat√©goriques.

## üöÄ D√©monstration

```{r}
# Nombre d'infractions par type d‚Äô√©tablissement

listecondamnation %>%
  count(Type_etablissement) %>%
  arrange(desc(n))
```

> **Astuce** : `count()` + `arrange(desc(n))` vous permet de classer les cat√©gories par ordre d‚Äôoccurrence.

::: experimentation
üß™ Exp√©rimentations

1.  **Proportions** : Calculez la proportion de chaque type d‚Äô√©tablissement (ex. `count(Type_etablissement) %>% mutate(prop = n / sum(n))`).

2.  **Amende moyenne** : Apr√®s avoir extrait la valeur num√©rique de la colonne `Amende` de l'exercice de la section pr√©c√©dente, regroupez par `Type_etablissement` et calculez la moyenne de l‚Äôamende (`mean(Amende_num)`).

3.  **Infractions sur l‚Äôensemble du Qu√©bec** : Comparez la distribution entre ‚ÄúMontr√©al‚Äù (filtr√©e pr√©c√©demment) et le reste. Quelle cat√©gorie d‚Äô√©tablissements semble la plus concern√©e‚ÄØ?
:::

Un tableau de contingence (ou tableau crois√©) est un tableau qui pr√©sente simultan√©ment la r√©partition de deux (ou plusieurs) variables cat√©goriques, permettant ainsi de rep√©rer des liens ou des tendances entre elles. Par exemple, pour croiser le type d‚Äô√©tablissement et la nature de l‚Äôinfraction dans votre jeu de donn√©es‚ÄØ:
```{r eval=FALSE}
table(
  listecondamnation$Type_etablissement,
  listecondamnation$SOC_NOM_ARTCL_INFRC
)

```


üí° **Question de r√©flexion** : Y a-t-il plus de restaurants qui ont eu une amende pour `INSECTES RONGEURS EXCREMENTS` ou de Rest. service rapide qui ont eu une amende pour `INSALUBRITE`?


::: exercise
üìù **Exercice** :

1.  **Table de contingence** : Construisez un tableau crois√© entre `Type_etablissement` et la nature de l‚Äôinfraction (`SOC_NOM_ARTCL_INFRC`), dans votre sous-ensemble de Montr√©al.

2.  **R√©sum√© descriptif** : Dressez un petit tableau r√©capitulatif (type d‚Äô√©tablissement, nombre total, amende moyenne).

3.  **Cat√©gories rares** : D√©terminez si l‚Äôune des variables cat√©goriques (`SOC_NOM_ARTCL_INFRC` et `Type_etablissement`) a des cat√©gories rare ou quasi inexploit√©e. Devrait-on la regrouper‚ÄØ?
:::


Pensez √† g√©n√©rer votre rapport, committer vos modifications et pousser sur GitHub pour garder une trace de votre travail ! üöÄ

------------------------------------------------------------------------

# üìà  Visualisation de donn√©es cat√©goriques

## ‚ú® Explications

Pour repr√©senter visuellement des variables cat√©goriques, on utilise souvent :

- **Diagrammes en barres** (`geom_bar()` ou `geom_col()`), 

- **Diagramme en tarte (Pie chart)** (moins recommand√©, sauf usage tr√®s simple), 

- **Graphique de mosaique (Mosaic plots)** si on veut comparer plusieurs cat√©gories crois√©es.

## üöÄ D√©monstration

```{r }
library(ggplot2)

# Exemple : Nombre d‚Äôinfractions par type d‚Äô√©tablissement
listecondamnation %>%
  ggplot(aes(x = Type_etablissement)) +
  geom_bar(fill = "steelblue") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + # permet de rotationner les noms des labels sur l'axe des x
  labs(
    title = "Infractions par type d‚Äô√©tablissement √† Montr√©al",
    x = "Type d‚Äô√©tablissement",
    y = "Nombre d'infractions"
  )
```

> **Id√©e** : Appliquez un `coord_flip()` si les noms sont trop longs!


::: experimentation
Exp√©rimentations:

1.  **Top 5** : Concentrez-vous sur les 5 cat√©gories les plus fr√©quentes de `SOC_NOM_ARTCL_INFRC` (via un tri ou `fct_lump()`).
2.  **Diagramme √† barre** : faites un diagramme √† barre selon  `SOC_NOM_ARTCL_INFRC` et le type d'√©tablissement `Type_etablissement`.
3.  **Bonnes pratiques de visualisation** : Ajoutez un titre, des couleurs, modifiez le th√®me ou l‚Äôorientation de l‚Äôaxe pour un rendu plus clair.
:::

::: exercise

‚úèÔ∏è Exercices:

1.  **Boites √† moustaches** : Repr√©sentez (avec des boites √† moustache) la r√©partition ddu montant de l'amende  au sein de chaque `Type_etablissement`.
2.  **Comparaison** : Comparez Montr√©al versus hors Montr√©al (deux boites √† moustaches c√¥te √† c√¥te, par type d‚Äô√©tablissement). Que remarquez-vous?
3.  **Traitement de donn√©es manquantes** : Que faites-vous si `Amende` est manquante dans un sous-ensemble‚ÄØ? Explorez quelques pistes.
:::

------------------------------------------------------------------------

# üéâ Conclusion

Dans cette aventure, vous avez :

-   D√©couvert les bases du **traitement de variables cat√©goriques**.
-   R√©alis√© des **statistiques descriptives** (tableaux de fr√©quences, proportion, etc.) sur un sous-ensemble filtr√© √† Montr√©al.
-   Construit des **visualisations** adapt√©es pour comprendre la distribution des infractions.

En fil conducteur, votre objectif √©tait d‚Äô**analyser les infractions dans les restaurants de Montr√©al**. Vos observations peuvent aider la ville et le minist√®re √† cibler leurs contr√¥les. Il ne vous reste plus qu'a inscrire vos conclusions et r√©pondre au question dans le rapport.

Pensez √† g√©n√©rer votre rapport, committer vos modifications et pousser sur GitHub pour garder une trace de votre travail ! üöÄ


> üéØ **F√©licitations**‚ÄØ! Vous avez mis en pratique les concepts de variables cat√©goriques, de statistiques descriptives et de visualisation pour des donn√©es cat√©goriques r√©elles. Continuez ainsi, le prochain module vous attend.
