---
title: "Analyse GLBFP"
author: "Aurélien Nicosia"
format:
  html:
    self-contained: true
editor: visual
---

```{r setup, messages=FALSE, warning=FALSE, include=FALSE}
library(readr)
library(tidyverse)
library(lubridate)
library(ggmap)
library(ggplot2)
library(leaflet)
library(gridExtra)
library(viridis)  # pour des palettes jolies et inclusives

# Options globales pour les chunks
knitr::opts_chunk$set(
  echo = TRUE,
  warning = FALSE,
  message = FALSE,
  fig.align = "center",
  fig.width = 9,
  fig.height = 7
)

```

## Data and objective

The dataset used in this analysis comes from the [UCI Machine Learning Repository](https://archive.ics.uci.edu/dataset/1050/twitter+geospatial+data). It consists of a large-scale collection of geolocated tweets posted in January 2013, and was initially made available for research on spatial and temporal patterns in social media.

The data includes more than 23 million tweets, each containing:

-   the timestamp of the tweet (in UTC),

-   the latitude and longitude of the tweet location,

For the purposes of this study, we focus on tweets posted on **January 13 and 14, 2013**, which correspond to the date of a major NFL game held at the Gillette Stadium in Foxborough, Massachusetts. The goal is to compare the temporal distribution of tweets during the time of the game (16:40 to 19:55 EST) with the same time window on the following day.

```{r}
leaflet() %>%
    addTiles() %>%  # Carte OpenStreetMap par défaut
    addMarkers(lng = -71.2643, lat = 42.0909, popup = "Gillette Stadium")
```

The goal is to compare the temporal distribution of tweets during the time of the game (16:40 to 19:55 EST) with the same time window on the following day. To achieve this, we employ the Generalized Linear Blend Frequency Polygon (GLBFP) method, which offers enhanced spatial density estimation by adjusting for smoothing bias through higher-order shifts (parameter ( m )). This approach allows for better resolution of local variations in tweet density, especially in high-activity areas like stadium surroundings during major events.

## Data preprocessing

```{r}
twitter <- read_csv("data/twitter/twitter.csv")

twitter <- twitter %>%
  mutate(datetime = ymd_hms(as.character(timestamp), tz = "America/Winnipeg"),
         date = date(datetime)) %>%
    filter(!is.na(date))

# Region of Foxborough (region of Gillette Stadium)
min_lon <- -72.31
max_lon <- -70.22
min_lat <- 41
max_lat <- 43.5

# Coordinates of Gillette Stadium
stadium_coords <- data.frame(
  longitude = -71.2643,
  latitude = 42.0909
)

# Filtering tweets from Foxborough region, and time
tweets_foxborough <- twitter %>%
  mutate(
    date = date(datetime),      
    time = format(datetime, "%H:%M:%S") 
  ) %>%
  filter(
    (date == as.Date("2013-01-13") & time >= "16:40:00" & time <= "19:55:00") |
      (date == as.Date("2013-01-14") & time >= "16:40:00" & time <= "19:55:00"),
    longitude >= min_lon,
    longitude <= max_lon,
    latitude  >= min_lat,
    latitude  <= max_lat)

```

### Initial visualization

This preliminary visualization shows the spatial spread of geolocated tweets near Foxborough on both days. A visual concentration of points can already be seen near the stadium area on January 13, suggesting heightened activity during the NFL event.

```{r}

counties <- map_data("county")

ggplot( tweets_foxborough, aes( x = longitude, y = latitude, group = 1))+
  geom_point(alpha= 0.1, color = "lightblue")+
  coord_fixed(1.3) +
  theme_bw()+
  facet_wrap("date")+
  geom_polygon(data = counties,  aes(long, lat, group = group), fill = "lightblue", color = "black",alpha = 0.1 ) +
  xlim(c(min_lon,max_lon))+
  ylim(c(min_lat, max_lat))+
  geom_point(data = stadium_coords, aes(x = longitude, y = latitude),
             color = "red", size = 3)
```

## GLBFP analysis

### Bandwidth Selection

The choice of the bandwidth parameter ( b ) is a crucial step in density estimation, as it directly influences the smoothness and precision of the estimated surface. In the context of the GLBFP method, we compute the optimal bandwidth using the built-in `compute_bi_optim()` function provided in the GLBFP package.

The optimal bandwidth is computed separately for each dataset (i.e., for each date), allowing the density estimation to adapt to the specific distribution of points. This is particularly important in our case, as the spatial spread of tweets varies significantly between January 13 and January 14. By using the optimal bandwidth, we ensure that the resulting GLBFP surfaces are comparable across dates and adequately reflect the underlying spatial structure of the data.

```{r eval=TRUE}
library(GLBFP)
df_13 <- tweets_foxborough %>% filter(date == as.Date("2013-01-13")) %>% select(longitude, latitude)
df_14 <- tweets_foxborough %>% filter(date == as.Date("2013-01-14")) %>% select(longitude, latitude)

# compute of bi_optim
compute_bi_optim(df_13)
compute_bi_optim(df_14)
# We choose b=c(0.3,0.3)
b = c(0.13, 0.13)
```

We first estimate the local density at the Gillette Stadium coordinates using the GLBFP method. The smoothing parameter ( m ) controls the degree of blending in the estimation. When ( m = 1 ), the method reduces to the Local Blend Frequency Polygon (LBFP), while increasing ( m ) enhances the smoothness and stability of the estimate.

```{r eval=TRUE}
# Use of GLBFP

# m_1= m_2 = 1
m <- c(1, 1)
GLBFP(x = as.numeric(stadium_coords), m = m, data = df_13, b = b, min_vals = c(min_lon,min_lat), max_vals = c(max_lon, max_lat))
GLBFP(x = as.numeric(stadium_coords), m = m, data = df_14, b = b, min_vals = c(min_lon,min_lat), max_vals = c(max_lon, max_lat)) 


# m_1= m_2 = 8
m <- c(8, 8)
GLBFP(x = as.numeric(stadium_coords), m = m, data = df_13, b = b, min_vals = c(min_lon,min_lat), max_vals = c(max_lon, max_lat))
GLBFP(x = as.numeric(stadium_coords), m = m, data = df_14, b = b, min_vals = c(min_lon,min_lat), max_vals = c(max_lon, max_lat)) 
```

For January 13, the estimated density at the stadium is substantially higher than for January 14, regardless of the value of ( m ). This confirms the expected spike in social media activity on game day. The increase in estimated density with higher ( m ) values illustrates the smoothing effect and the ability to capture sharper local peaks.

## GLBFP density comparison

```{r}
load("data/models.RData")
```

```{r}
df_GLBFP13_m4 <- as.data.frame(cbind(result_GLBFP_13_m4$grid, result_GLBFP_13_m4$densities, result_GLBFP_13_m4$IC))
colnames(df_GLBFP13_m4) = c("longitude", "latitude","density" ,"IC_inf", "IC_sup")
df_GLBFP13_m4$m = 4
df_GLBFP13_m4$date = as.Date("2013-01-13")

df_GLBFP14_m4 <- as.data.frame(cbind(result_GLBFP_14_m4$grid, result_GLBFP_14_m4$densities, result_GLBFP_14_m4$IC))
colnames(df_GLBFP14_m4) = c("longitude", "latitude","density" ,"IC_inf", "IC_sup")
df_GLBFP14_m4$m = 4
df_GLBFP14_m4$date = as.Date("2013-01-14")

df_GLBFP13_m2 <- as.data.frame(cbind(result_GLBFP_13_m2$grid, result_GLBFP_13_m2$densities, result_GLBFP_13_m2$IC))
colnames(df_GLBFP13_m2) = c("longitude", "latitude","density" ,"IC_inf", "IC_sup")
df_GLBFP13_m2$m = 2
df_GLBFP13_m2$date = as.Date("2013-01-13")

df_GLBFP14_m2 <- as.data.frame(cbind(result_GLBFP_14_m2$grid, result_GLBFP_14_m2$densities, result_GLBFP_14_m2$IC))
colnames(df_GLBFP14_m2) = c("longitude", "latitude","density" ,"IC_inf", "IC_sup")
df_GLBFP14_m2$m = 2
df_GLBFP14_m2$date = as.Date("2013-01-14")

df_GLBFP13_m1 <- as.data.frame(cbind(result_LBFP_13$grid, result_LBFP_13$densities, result_LBFP_13$IC))
colnames(df_GLBFP13_m1) = c("longitude", "latitude","density" ,"IC_inf", "IC_sup")
df_GLBFP13_m1$m = 1
df_GLBFP13_m1$date = as.Date("2013-01-13")

df_GLBFP14_m1 <- as.data.frame(cbind(result_LBFP_14$grid, result_LBFP_14$densities, result_LBFP_14$IC))
colnames(df_GLBFP14_m1) = c("longitude", "latitude","density" ,"IC_inf", "IC_sup")
df_GLBFP14_m1$m = 1
df_GLBFP14_m1$date = as.Date("2013-01-14")

df <- rbind(df_GLBFP13_m1, df_GLBFP14_m1, df_GLBFP13_m2, df_GLBFP14_m2, df_GLBFP13_m4, df_GLBFP14_m4)

```

```{r}
ggplot(data = df, aes( x= longitude, y = latitude, z = density))+
  coord_fixed(1.3)+
  geom_contour_filled() +
  scale_fill_viridis_d(option = "plasma", name = "density") + 
  facet_grid(date~paste0("m=",m))+
  theme_minimal()+
#  geom_polygon(data = counties,  aes(long, lat, group = group), fill = "white", color = "lightgrey",alpha = 0.1 ) +
  xlim(c(min_lon,max_lon))+
  ylim(c(min_lat, max_lat))+
  geom_point(data = stadium_coords, aes(x = longitude, y = latitude, z = NA),
             color = "green", size = 1)+
  xlim(c(stadium_coords$longitude-0.5, stadium_coords$longitude+0.5))+
  ylim(c(stadium_coords$latitude-0.5, stadium_coords$latitude+0.5))+
  ggtitle("GLBFP density comparison", "Green point represents Gillette Stadium ")
```

Figure X compares the GLBFP density estimates for January 13 and 14, 2013, around the Gillette Stadium area (marked with a green dot). A clear contrast is observed between the two dates: on January 13, the day of the NFL match, the tweet density is significantly higher around the stadium than on the following day. This trend holds across all values of ( m ), confirming the influence of the event on localized tweet activity.

Additionally, increasing the shift parameter ( m ) improves the clarity of the density pattern near the stadium. While the case ( m = 1 ) (LBFP) shows a more diffused pattern, the GLBFP estimations with ( m = 2 ) and ( m = 4 ) highlight the presence of a distinct peak in the immediate vicinity of the stadium. Importantly, this peak is distinguishable from the broader high-density region corresponding to the Boston metropolitan area, located in the northeast corner. This demonstrates how GLBFP helps isolate local effects from global trends in spatial point data.

### Local confidence interval analysis ($m=4$)

```{r}
delta <- 0.2
grid_points <- data.frame(expand.grid(seq(stadium_coords$longitude-delta, stadium_coords$longitude+delta, length.out = 20), seq(stadium_coords$latitude-delta, stadium_coords$latitude+delta, , length.out = 20)))

result_GLBFP_local_13<- GLBFP_estimate(df_13, b = b, m = c(4,4), grid_points = grid_points)
result_GLBFP_local_14<- GLBFP_estimate(df_14, b = b, m = c(4,4), grid_points = grid_points)

df_CI_GLBFP <- cbind(result_GLBFP_local_13$grid, result_GLBFP_local_13$densities, result_GLBFP_local_13$IC, result_GLBFP_local_14$densities, result_GLBFP_local_14$IC)
df_CI_GLBFP <- as.data.frame(df_CI_GLBFP)

colnames(df_CI_GLBFP) = c("longitude", "latitude","density_13" ,"CI_inf_13", "CI_sup_13", "density_14" , "CI_inf_14", "CI_sup_14")


interval_overlap <- function(lower1, upper1, lower2, upper2) {
  !(upper1 < lower2 | lower1 > upper2)
}

interval_13bigger14 <- function(density1, density2) {
  (density1 > density2)
}


df_CI_GLBFP$overlap_13_14 <- with(df_CI_GLBFP, interval_overlap(CI_inf_13, CI_sup_13, CI_inf_14, CI_sup_14))
df_CI_GLBFP$bigger_13_14 <- with(df_CI_GLBFP, interval_13bigger14(density_13, density_14))

ggplot(df_CI_GLBFP, aes(x = longitude, y = latitude)) +
  geom_point(aes(color = overlap_13_14), size = 3) +
  scale_color_manual(values = c("TRUE" = "red", "FALSE" = "blue"),
                     labels = c("Not overlaping", "Overlaping"),
                     name = "Overlap CI") +
  coord_fixed(1.3) +
  theme_minimal() +
  labs(title = "Map of overlapping confidence intervals",
       x = "Longitude",
       y = "Latitude")+
  geom_point(data = stadium_coords, aes(x = longitude, y = latitude),
             color = "green", size = 3)


ggplot(df_CI_GLBFP, aes(x = longitude, y = latitude)) +
  geom_point(aes(color = bigger_13_14), size = 3) +
  scale_color_manual(values = c("TRUE" = "red", "FALSE" = "blue"),
                     labels = c("Higher on January 14", "Higher on January 13"),
                     name = "GLBFP estimate") +
  coord_fixed(1.3) +
  theme_minimal() +
  labs(title = "Map of GLBFP density estimation",
       x = "Longitude",
       y = "Latitude")+
  geom_point(data = stadium_coords, aes(x = longitude, y = latitude),
             color = "green", size = 3)



ggplot(df_CI_GLBFP, aes(x = longitude, y = latitude, z = density_13-density_14)) +
   geom_contour_filled() +
  scale_fill_viridis_d(option = "plasma", name = "density difference (13-14)")+
  coord_fixed(1.3) +
  theme_minimal() +
  labs(title = "Map of difference between GLBFP density Junuary 13/14",
       x = "Longitude",
       y = "Latitude")+
  geom_point(data = stadium_coords, aes(x = longitude, y = latitude, z = NA),
             color = "green", size = 3)



```

This comparison of confidence intervals reveals that several locations around the stadium show non-overlapping intervals between January 13 and 14, reinforcing the statistical significance of the observed density difference. Most notably, the red points indicate areas where the tweet density on January 13 is significantly higher, without overlapping with the confidence intervals from January 14. These findings further validate the impact of the sporting event on localized tweet activity.

The second map shows which areas exhibit higher density values on January 13 compared to January 14. It complements the confidence interval analysis by visualizing the direction of the difference. The green point again marks the stadium location, which is surrounded by several zones with increased activity on game day.
